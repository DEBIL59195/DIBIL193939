local RunService = game:GetService('RunService')
local Players = game:GetService('Players')
local CoreGui = game:GetService('CoreGui')

local OBJECT_EMOJIS = {
    ['La Vacca Saturno Saturnita'] = 'üêÆ',
    ['Nooo My Hotspot'] = 'üëΩ',
    ['La Supreme Combinasion'] = 'üî´',
    ['Ketupat Kepat'] = '‚ö∞Ô∏è',
    ['Graipuss Medussi'] = 'ü¶ë',
    ['Torrtuginni Dragonfrutini'] = 'üê¢',
    ['Pot Hotspot'] = 'üì±',
    ['La Grande Combinasion'] = '‚ùó',
    ['Garama and Madundung'] = 'ü•´',
    ['Secret Lucky Block'] = '‚¨õÔ∏è',
    ['Strawberry Elephant'] = 'üêò',
    ['Nuclearo Dinossauro'] = 'ü¶ï',
    ['Spaghetti Tualetti'] = 'üöΩ',
    ['Chicleteira Bicicleteira'] = 'üö≤',
    ['Los Combinasionas'] = '‚öíÔ∏è',
    ['Ketchuru and Musturu'] = 'üçæ',
    ['Los Hotspotsitos'] = '‚òéÔ∏è',
    ['Los Nooo My Hotspotsitos'] = 'ü•î',
    ['Esok Sekolah'] = 'üè†',
    ["La Karkerkar Combinsion"] = "ü•ä",
    ["Tralaledon"] = "ü¶à",
    ["Los Bros"] = "‚úä"
}

local ESP_SETTINGS = {
    UpdateInterval = 0.2,
    MaxDistance = 500,
    TextSize = 16,
    Font = Enum.Font.GothamBold,
    Color = Color3.fromRGB(148, 0, 211),
    BgColor = Color3.fromRGB(24, 16, 40),
    TxtColor = Color3.fromRGB(225, 210, 255),
}

local camera = workspace.CurrentCamera
local espCache = {}

local screenGui = Instance.new('ScreenGui')
screenGui.Name = 'PurpleESP'
screenGui.Parent = CoreGui
screenGui.ResetOnSpawn = false

local statusLabel = Instance.new('TextLabel')
statusLabel.Name = 'ESPStatus'
statusLabel.Text = 'üîç ESP: ACTIVE'
statusLabel.TextColor3 = ESP_SETTINGS.Color
statusLabel.TextSize = 18
statusLabel.Font = ESP_SETTINGS.Font
statusLabel.BackgroundColor3 = ESP_SETTINGS.BgColor
statusLabel.BackgroundTransparency = 0.2
statusLabel.AnchorPoint = Vector2.new(1, 0)
statusLabel.Position = UDim2.new(1, -10, 0, 10)
statusLabel.Size = UDim2.new(0, 220, 0, 36)
statusLabel.TextXAlignment = Enum.TextXAlignment.Right
statusLabel.Parent = screenGui

local function clearOldESP()
    for obj, data in pairs(espCache) do
        if not obj or not obj.Parent then
            if data.gui then
                data.gui:Destroy()
            end
            espCache[obj] = nil
        end
    end
end

local function getRootPart(obj)
    if obj:IsA('BasePart') then
        return obj
    end
    if obj:IsA('Model') then
        return obj.PrimaryPart
            or obj:FindFirstChild('HumanoidRootPart')
            or obj:FindFirstChildWhichIsA('BasePart')
    end
    return nil
end

local function isValidTarget(obj)
    return OBJECT_EMOJIS[obj.Name]
        and ((obj:IsA('BasePart')) or (obj:IsA('Model') and getRootPart(obj)))
end

local function createESP(obj)
    local rootPart = getRootPart(obj)
    if not rootPart then
        return
    end

    local gui = Instance.new('BillboardGui')
    gui.Adornee = rootPart
    gui.Size = UDim2.new(0, 220, 0, 30)
    gui.AlwaysOnTop = true
    gui.MaxDistance = ESP_SETTINGS.MaxDistance
    gui.LightInfluence = 0
    gui.StudsOffset = Vector3.new(0, 3, 0)
    gui.Parent = screenGui

    local frame = Instance.new('Frame')
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = ESP_SETTINGS.BgColor
    frame.BackgroundTransparency = 0.2
    frame.BorderSizePixel = 0
    frame.Parent = gui

    local corner = Instance.new('UICorner')
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame

    local border = Instance.new('UIStroke')
    border.Color = ESP_SETTINGS.Color
    border.Thickness = 1.5
    border.Parent = frame

    local textLabel = Instance.new('TextLabel')
    textLabel.Size = UDim2.new(1, -8, 1, -4)
    textLabel.Position = UDim2.new(0, 4, 0, 2)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = ESP_SETTINGS.TxtColor
    textLabel.Font = ESP_SETTINGS.Font
    textLabel.TextSize = ESP_SETTINGS.TextSize
    textLabel.TextXAlignment = Enum.TextXAlignment.Center
    textLabel.TextYAlignment = Enum.TextYAlignment.Center
    textLabel.Text = OBJECT_EMOJIS[obj.Name] .. ' ' .. obj.Name
    textLabel.TextScaled = true
    textLabel.TextWrapped = false
    textLabel.ClipsDescendants = true
    textLabel.Parent = frame

    return { gui = gui, rootPart = rootPart }
end

local lastUpdate = 0
local function updateESP(dt)
    lastUpdate = lastUpdate + dt
    if lastUpdate < ESP_SETTINGS.UpdateInterval then
        return
    end
    lastUpdate = 0
    clearOldESP()

    local found = 0

    for _, obj in ipairs(workspace:GetDescendants()) do
        if isValidTarget(obj) then
            local rootPart = getRootPart(obj)
            local dist = (rootPart.Position - camera.CFrame.Position).Magnitude
            if dist <= ESP_SETTINGS.MaxDistance then
                if not espCache[obj] then
                    local espData = createESP(obj)
                    if espData then
                        espCache[obj] = espData
                    end
                end
                local espData = espCache[obj]
                if espData then
                    local _, onScreen = camera:WorldToViewportPoint(rootPart.Position)
                    espData.gui.Enabled = onScreen
                    found = found + 1
                end
            else
                if espCache[obj] then
                    espCache[obj].gui.Enabled = false
                end
            end
        end
    end

    statusLabel.Text = 'üîç ESP: ACTIVE | Found: ' .. found
end

RunService.Heartbeat:Connect(updateESP)

Players.PlayerRemoving:Connect(function(player)
    if player == Players.LocalPlayer then
        clearOldESP()
        if screenGui then
            screenGui:Destroy()
        end
    end
end)

print('üîç SCALABLE EMOJI ESP loaded!')
-- SAFE ANTI-LEAK PROTECTION for Roblox (√ê¬æ√ê¬±√ë¬Ö√ê¬æ√ê¬¥ readonly √ê¬æ√ë¬à√ê¬∏√ê¬±√ê¬æ√ê¬∫)
local G = (getgenv and getgenv()) or _G

local function clog(msg)
    msg = '[SAFE-BLOCK] ' .. tostring(msg)
    if warn then
        warn(msg)
    else
        print(msg)
    end
    if G.rconsoleprint then
        G.rconsoleprint(msg .. '\n')
    end
end

-- √ê¬ë√ê¬µ√ê¬∑√ê¬æ√ê¬ø√ê¬∞√ë¬Å√ê¬Ω√ê¬∞√ë¬è √ê¬∑√ê¬∞√ê¬º√ê¬µ√ê¬Ω√ê¬∞ √ë¬Å √ê¬ø√ë¬Ä√ê¬æ√ê¬≤√ê¬µ√ë¬Ä√ê¬∫√ê¬æ√ê¬π readonly
local function safe_replace(table, key, new_func)
    local success = pcall(function()
        table[key] = new_func
    end)
    if success then
        clog('Replaced ' .. tostring(key))
    else
        clog('Failed to replace ' .. tostring(key) .. ' (readonly)')
    end
    return success
end

-- √ê¬§√ë¬É√ê¬Ω√ê¬∫√ë¬Ü√ê¬∏√ë¬è-√ê¬±√ê¬ª√ê¬æ√ê¬∫√ê¬∏√ë¬Ä√ê¬æ√ê¬≤√ë¬â√ê¬∏√ê¬∫
local function block_request(opts)
    local url = 'unknown'
    if type(opts) == 'table' then
        url = opts.Url or opts.url or tostring(opts)
    else
        url = tostring(opts)
    end
    clog('BLOCKED: ' .. url)
    return {
        StatusCode = 200,
        Headers = {},
        Body = '{"blocked":true}',
        Success = true,
    }
end

-- √ê¬ü√ê¬æ√ê¬ø√ë¬ã√ë¬Ç√ê¬∫√ê¬∞ √ê¬∑√ê¬∞√ê¬º√ê¬µ√ê¬Ω√ë¬ã √ê¬æ√ë¬Å√ê¬Ω√ê¬æ√ê¬≤√ê¬Ω√ë¬ã√ë¬Ö HTTP √ë¬Ñ√ë¬É√ê¬Ω√ê¬∫√ë¬Ü√ê¬∏√ê¬π
safe_replace(G, 'request', block_request)
safe_replace(G, 'http_request', block_request)
safe_replace(G, 'syn_request', block_request)

-- √ê¬ó√ê¬∞√ê¬º√ê¬µ√ê¬Ω√ê¬∞ √ê¬≤√ê¬æ √ê¬≤√ê¬ª√ê¬æ√ê¬∂√ê¬µ√ê¬Ω√ê¬Ω√ë¬ã√ë¬Ö √ë¬Ç√ê¬∞√ê¬±√ê¬ª√ê¬∏√ë¬Ü√ê¬∞√ë¬Ö
pcall(function()
    if G.syn and type(G.syn) == 'table' then
        safe_replace(G.syn, 'request', block_request)
    end
end)

pcall(function()
    if G.http and type(G.http) == 'table' then
        safe_replace(G.http, 'request', block_request)
    end
end)

pcall(function()
    if G.fluxus and type(G.fluxus) == 'table' then
        safe_replace(G.fluxus, 'request', block_request)
    end
end)

pcall(function()
    if G.krnl and type(G.krnl) == 'table' then
        safe_replace(G.krnl, 'request', block_request)
    end
end)

-- √ê¬ë√ê¬ª√ê¬æ√ê¬∫√ê¬∏√ë¬Ä√ê¬æ√ê¬≤√ê¬∫√ê¬∞ Roblox √ê¬≤√ë¬Å√ë¬Ç√ë¬Ä√ê¬æ√ê¬µ√ê¬Ω√ê¬Ω√ë¬ã√ë¬Ö √ë¬Ñ√ë¬É√ê¬Ω√ê¬∫√ë¬Ü√ê¬∏√ê¬π (√ê¬æ√ê¬Ω√ê¬∏ √ê¬æ√ê¬±√ë¬ã√ë¬á√ê¬Ω√ê¬æ √ê¬Ω√ê¬µ readonly)
pcall(function()
    local HttpService = game:GetService('HttpService')
    if HttpService then
        HttpService.RequestAsync = function(self, opts)
            clog(
                'BLOCKED HttpService.RequestAsync: '
                    .. tostring(opts.Url or 'unknown')
            )
            return {
                StatusCode = 200,
                Success = true,
                Body = '{"blocked":true}',
            }
        end

        game.HttpGet = function(self, url)
            clog('BLOCKED game:HttpGet: ' .. tostring(url))
            return '{"blocked":true}'
        end

        game.HttpPost = function(self, url, data)
            clog('BLOCKED game:HttpPost: ' .. tostring(url))
            return '{"blocked":true}'
        end
    end
end)

-- √ê¬î√ê¬æ√ê¬ø√ê¬æ√ê¬ª√ê¬Ω√ê¬∏√ë¬Ç√ê¬µ√ê¬ª√ë¬å√ê¬Ω√ê¬∞√ë¬è √ê¬∑√ê¬∞√ë¬â√ê¬∏√ë¬Ç√ê¬∞ √ë¬á√ê¬µ√ë¬Ä√ê¬µ√ê¬∑ √ê¬º√ê¬µ√ë¬Ç√ê¬∞√ë¬Ç√ê¬∞√ê¬±√ê¬ª√ê¬∏√ë¬Ü√ë¬ã
pcall(function()
    local mt = getmetatable(G) or {}
    local old_index = mt.__index

    mt.__index = function(t, k)
        if k == 'request' or k == 'http_request' or k == 'syn_request' then
            return block_request
        end
        return old_index and old_index(t, k) or rawget(t, k)
    end

    setmetatable(G, mt)
    clog('Metatable protection enabled')
end)

clog('SAFE PROTECTION ENABLED - HTTP requests blocked where possible')
-- –°–∫—Ä–∏–ø—Ç –¥–ª—è Executor —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏, –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç–µ–Ω, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –≤—ã—Å–æ—Ç—ã –∏ –∫–∞–º–µ—Ä–æ–π –≤—ã—à–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞

local camera = workspace.CurrentCamera
local UserInputService = game:GetService('UserInputService')
local Players = game:GetService('Players')
local RunService = game:GetService('RunService')
local player = Players.LocalPlayer

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
local isCameraRaised = false
local originalCFrame = nil
local isFrozen = false
local cameraFollowConnection = nil

-- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –æ—Ç –∑–µ–º–ª–∏ (–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ)
local MAX_HEIGHT = 500 -- –ú–∞–∫—Å–∏–º—É–º 500 studs –æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
local CAMERA_HEIGHT_OFFSET = 20 -- –ù–∞ —Å–∫–æ–ª—å–∫–æ studs –∫–∞–º–µ—Ä–∞ –≤—ã—à–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
local ScreenGui = Instance.new('ScreenGui')
local CoordinatesFrame = Instance.new('Frame')
local CoordinatesLabel = Instance.new('TextLabel')

ScreenGui.Name = 'CoordinatesGUI'
ScreenGui.Parent = player:WaitForChild('PlayerGui')
ScreenGui.ResetOnSpawn = false

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–º–∫–∏ –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
CoordinatesFrame.Parent = ScreenGui
CoordinatesFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CoordinatesFrame.BackgroundTransparency = 0.3
CoordinatesFrame.BorderSizePixel = 0
CoordinatesFrame.Size = UDim2.new(0, 220, 0, 80)
CoordinatesFrame.Position = UDim2.new(0, 10, 0, 10)
CoordinatesFrame.Active = false

-- –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
local UICorner = Instance.new('UICorner')
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = CoordinatesFrame

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
CoordinatesLabel.Parent = CoordinatesFrame
CoordinatesLabel.BackgroundTransparency = 1
CoordinatesLabel.Size = UDim2.new(1, 0, 1, 0)
CoordinatesLabel.Font = Enum.Font.Code
CoordinatesLabel.Text = 'X: 0, Y: 0, Z: 0\n–í—ã—Å–æ—Ç–∞: 0'
CoordinatesLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
CoordinatesLabel.TextSize = 12
CoordinatesLabel.TextXAlignment = Enum.TextXAlignment.Left

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
local startingHeight = nil

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã –≤—ã—à–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function enableFollowCamera()
    if not isCameraRaised then
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É –≤ —Ä–µ–∂–∏–º Scriptable –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
        camera.CameraType = Enum.CameraType.Scriptable

        -- –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –∫–∞–º–µ—Ä—ã
        cameraFollowConnection = RunService.RenderStepped:Connect(function()
            local character = player.Character
            if character then
                local humanoidRootPart = character:FindFirstChild('HumanoidRootPart')
                if humanoidRootPart then
                    -- –ü–æ–∑–∏—Ü–∏—è –∫–∞–º–µ—Ä—ã –≤—ã—à–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                    local characterPosition = humanoidRootPart.Position
                    local cameraPosition = characterPosition + Vector3.new(0, CAMERA_HEIGHT_OFFSET, 0)

                    -- –ö–∞–º–µ—Ä–∞ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å–≤–µ—Ä—Ö—É –ø–æ–¥ –Ω–µ–±–æ–ª—å—à–∏–º —É–≥–ª–æ–º
                    local lookDirection = (characterPosition - cameraPosition).Unit
                    camera.CFrame = CFrame.lookAt(cameraPosition, characterPosition)
                end
            end
        end)

        isCameraRaised = true
        print('–ö–∞–º–µ—Ä–∞ —Å–ª–µ–¥—É–µ—Ç –∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º —Å–≤–µ—Ä—Ö—É')
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–∞–º–µ—Ä—ã –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
local function disableFollowCamera()
    if isCameraRaised then
        -- –û—Ç–∫–ª—é—á–∞–µ–º —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–∞–º–µ—Ä—ã
        if cameraFollowConnection then
            cameraFollowConnection:Disconnect()
            cameraFollowConnection = nil
        end

        -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–º–µ—Ä—É –≤ —Ä–µ–∂–∏–º Custom (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)
        camera.CameraType = Enum.CameraType.Custom

        isCameraRaised = false
        print('–ö–∞–º–µ—Ä–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º')
    end
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–º–æ—Ä–æ–∑–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function freezeCharacter()
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild('HumanoidRootPart')
        local humanoid = character:FindFirstChild('Humanoid')

        if humanoidRootPart and humanoid then
            if not isFrozen then
                -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–º–æ—Ä–æ–∑–∫–µ
                if not startingHeight then
                    startingHeight = humanoidRootPart.Position.Y
                end

                humanoidRootPart.Anchored = true
                humanoid.WalkSpeed = 0
                humanoid.JumpPower = 0
                humanoid.PlatformStand = true
                isFrozen = true
                print('–ü–µ—Ä—Å–æ–Ω–∞–∂ –∑–∞–º–æ—Ä–æ–∂–µ–Ω')
            else
                humanoidRootPart.Anchored = false
                humanoid.WalkSpeed = 16
                humanoid.JumpPower = 50
                humanoid.PlatformStand = false
                isFrozen = false
                print('–ü–µ—Ä—Å–æ–Ω–∞–∂ —Ä–∞–∑–º–æ—Ä–æ–∂–µ–Ω')
            end
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –º–∏–∫—Ä–æ-—Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –≤–≤–µ—Ä—Ö —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç–µ–Ω –∏ –≤—ã—Å–æ—Ç—ã
local function safeMicroTeleportUp()
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild('HumanoidRootPart')
        if humanoidRootPart then
            local currentPosition = humanoidRootPart.Position

            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É
            if startingHeight and (currentPosition.Y - startingHeight) >= MAX_HEIGHT then
                print('–î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞!')
                return
            end

            -- –î–∏—Å—Ç–∞–Ω—Ü–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ (–æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∞—è –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–Ω—Ç–∏—á–∏—Ç–æ–≤)
            local teleportDistance = 0.4
            local targetPosition = currentPosition + Vector3.new(0, teleportDistance, 0)

            -- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Raycast –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
            raycastParams.FilterDescendantsInstances = { character }

            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –≤–≤–µ—Ä—Ö –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π
            local rayDirection = Vector3.new(0, teleportDistance + 0.5, 0)
            local raycastResult = workspace:Raycast(currentPosition, rayDirection, raycastParams)

            if raycastResult then
                -- –ï—Å—Ç—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ, —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è —Ç–æ–ª—å–∫–æ –¥–æ –Ω–µ–≥–æ
                local safePosition = raycastResult.Position - Vector3.new(0, 1, 0)
                if safePosition.Y > currentPosition.Y then
                    humanoidRootPart.CFrame = CFrame.new(
                        safePosition.X,
                        safePosition.Y,
                        safePosition.Z,
                        humanoidRootPart.CFrame.LookVector.X,
                        0,
                        humanoidRootPart.CFrame.LookVector.Z
                    )
                    print('–¢–µ–ª–µ–ø–æ—Ä—Ç –¥–æ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è: +' .. math.floor((safePosition.Y - currentPosition.Y) * 10) / 10)
                else
                    print('–ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ —Å–ª–∏—à–∫–æ–º –±–ª–∏–∑–∫–æ!')
                end
            else
                -- –ü—É—Ç—å —Å–≤–æ–±–æ–¥–µ–Ω, –º–æ–∂–µ–º —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è
                humanoidRootPart.CFrame = CFrame.new(
                    targetPosition,
                    targetPosition + humanoidRootPart.CFrame.LookVector
                )
                print('–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–∏–∫—Ä–æ-—Ç–µ–ª–µ–ø–æ—Ä—Ç: +0.4')
            end
        end
    end
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏ –≤—ã—Å–æ—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
RunService.Heartbeat:Connect(function()
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild('HumanoidRootPart')
        if humanoidRootPart then
            local pos = humanoidRootPart.Position
            local heightFromStart = startingHeight and (pos.Y - startingHeight) or 0
            local cameraStatus = isCameraRaised and '–°–ª–µ–¥–∏—Ç' or '–°—Ç–∞–Ω–¥–∞—Ä—Ç'

            CoordinatesLabel.Text = string.format(
                'X: %.1f, Y: %.1f, Z: %.1f\n–í—ã—Å–æ—Ç–∞: %.1f | –ö–∞–º–µ—Ä–∞: %s',
                pos.X,
                pos.Y,
                pos.Z,
                heightFromStart,
                cameraStatus
            )
        end
    else
        CoordinatesLabel.Text = '–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω'
    end
end)

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then
        return
    end

    -- –ö–ª–∞–≤–∏—à–∞ Y - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å–≤–µ—Ä—Ö—É
    if input.KeyCode == Enum.KeyCode.Y then
        if not isCameraRaised then
            enableFollowCamera()
        else
            disableFollowCamera()
        end
    end

    -- –ö–ª–∞–≤–∏—à–∞ T - –∑–∞–º–æ—Ä–æ–∑–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if input.KeyCode == Enum.KeyCode.T then
        freezeCharacter()
    end

    -- –ö–ª–∞–≤–∏—à–∞ U - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–∏–∫—Ä–æ-—Ç–µ–ª–µ–ø–æ—Ä—Ç –≤–≤–µ—Ä—Ö
    if input.KeyCode == Enum.KeyCode.U then
        safeMicroTeleportUp()
    end

    -- –ö–ª–∞–≤–∏—à–∞ R - —Å–±—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –≤—ã—Å–æ—Ç—ã
    if input.KeyCode == Enum.KeyCode.R then
        local character = player.Character
        if character and character:FindFirstChild('HumanoidRootPart') then
            startingHeight = character.HumanoidRootPart.Position.Y
            print('–ù–∞—á–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ —Å–±—Ä–æ—à–µ–Ω–∞')
        end
    end

    -- –ö–ª–∞–≤–∏—à–∞ G - –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã—Å–æ—Ç—É –∫–∞–º–µ—Ä—ã (–¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
    if input.KeyCode == Enum.KeyCode.G then
        if CAMERA_HEIGHT_OFFSET == 8 then
            CAMERA_HEIGHT_OFFSET = 15
            print('–í—ã—Å–æ—Ç–∞ –∫–∞–º–µ—Ä—ã: 15 studs')
        elseif CAMERA_HEIGHT_OFFSET == 15 then
            CAMERA_HEIGHT_OFFSET = 25
            print('–í—ã—Å–æ—Ç–∞ –∫–∞–º–µ—Ä—ã: 25 studs')
        else
            CAMERA_HEIGHT_OFFSET = 8
            print('–í—ã—Å–æ—Ç–∞ –∫–∞–º–µ—Ä—ã: 8 studs')
        end
    end
end)

print('–°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω! Y - –∫–∞–º–µ—Ä–∞ —Å–ª–µ–¥—É–µ—Ç —Å–≤–µ—Ä—Ö—É, T - –∑–∞–º–æ—Ä–æ–∑–∫–∞, U - —Ç–µ–ª–µ–ø–æ—Ä—Ç, R - —Å–±—Ä–æ—Å –≤—ã—Å–æ—Ç—ã, G - –≤—ã—Å–æ—Ç–∞ –∫–∞–º–µ—Ä—ã')
